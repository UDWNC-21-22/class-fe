{"ast":null,"code":"var _jsxFileName = \"D:\\\\WEBNC\\\\thiGK\\\\Midterm-Class\\\\src\\\\components\\\\Profile\\\\Profile.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container, Grid, makeStyles, Paper, TextField, Typography, Box } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { useLocalContext } from \"../../context/context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(themes => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  root: {\n    marginTop: themes.spacing(5),\n    display: 'flex',\n    justifyContent: 'center',\n    width: '70%'\n  },\n  changePassword: {\n    display: 'flex',\n    margin: themes.spacing(2),\n    flexDirection: 'column'\n  },\n  grid: {\n    width: '300px',\n    margin: themes.spacing(5)\n  }\n}));\nconst dummy = {\n  username: \"ngdkhoi\",\n  password: \"202cb962ac59075b964b07152d234b70\",\n  fullname: \"Nguyễn Đình Khôi\",\n  email: \"ngdkhoi27600@gmail.com\"\n};\n\nconst Profile = () => {\n  _s();\n\n  let user;\n  const styles = useStyles();\n  const [FullName, setFullName] = useState(() => {\n    const saved = localStorage.getItem('fullname'); //const init = JSON.parse(saved);\n\n    return saved || '';\n  });\n  const [UserName, setUserName] = useState(() => {\n    const saved = localStorage.getItem(\"username\"); //const init = JSON.parse(saved);\n\n    return saved;\n  });\n  const [Email, setEmail] = useState(() => {\n    const saved = localStorage.getItem(\"email\"); //const init = JSON.parse(saved);\n\n    return saved;\n  });\n  const {\n    dataInfo\n  } = useLocalContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [console.log(dataInfo), /*#__PURE__*/_jsxDEV(Box, {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(Paper, {\n          className: styles.root,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: styles.grid,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Th\\xF4ng tin c\\xE1 nh\\xE2n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"FullName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: dataInfo.fullname,\n                onChange: e => {\n                  setFullName(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                value: dataInfo.email,\n                onChange: e => {\n                  setEmail(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"User Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                children: dataInfo.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          className: styles.root,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            className: styles.grid,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: styles.changePassword,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Change password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Current Password\",\n                placeholder: \"Enter curent password\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"New Password\",\n                placeholder: \"Enter new password\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Confirm Password\",\n                placeholder: \"Re-enter new password\",\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Change Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"lGbQk06DYsUJpeioDf11CFtoLUU=\", false, function () {\n  return [useStyles, useLocalContext];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["D:/WEBNC/thiGK/Midterm-Class/src/components/Profile/Profile.js"],"names":["Button","Container","Grid","makeStyles","Paper","TextField","Typography","Box","React","useState","useLocalContext","useStyles","themes","container","display","justifyContent","alignItems","flexDirection","root","marginTop","spacing","width","changePassword","margin","grid","dummy","username","password","fullname","email","Profile","user","styles","FullName","setFullName","saved","localStorage","getItem","UserName","setUserName","Email","setEmail","dataInfo","console","log","e","target","value"],"mappings":"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","sourcesContent":["import { Button, Container, Grid, makeStyles, Paper, TextField, Typography, Box } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useLocalContext } from \"../../context/context\";\r\n\r\nconst useStyles = makeStyles(themes => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    root: {\r\n        marginTop: themes.spacing(5),\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        width: '70%'\r\n    },\r\n    changePassword: {\r\n        display: 'flex',\r\n        margin: themes.spacing(2),\r\n        flexDirection: 'column',\r\n\r\n    },\r\n    grid: {\r\n        width: '300px',\r\n        margin: themes.spacing(5)\r\n    }\r\n}))\r\n\r\nconst dummy = {\r\n    username: \"ngdkhoi\",\r\n    password: \"202cb962ac59075b964b07152d234b70\",\r\n    fullname: \"Nguyễn Đình Khôi\",\r\n    email: \"ngdkhoi27600@gmail.com\",\r\n}\r\n\r\nconst Profile = () => {\r\n    let user;\r\n    const styles = useStyles();\r\n    const [FullName, setFullName] = useState(()=>{\r\n        const saved = localStorage.getItem('fullname');\r\n        //const init = JSON.parse(saved);\r\n        return saved || '';\r\n    });\r\n    const [UserName, setUserName] = useState(()=>{\r\n        const saved = localStorage.getItem(\"username\");\r\n        //const init = JSON.parse(saved);\r\n        return saved;\r\n    })\r\n    const [Email, setEmail] = useState(()=>{\r\n        const saved = localStorage.getItem(\"email\");\r\n        //const init = JSON.parse(saved);\r\n        return saved;\r\n    })\r\n\r\n    const {dataInfo} = useLocalContext();\r\n\r\n    return (\r\n        <div>\r\n            {/* <Drawer /> */}\r\n            <Container >\r\n                {console.log(dataInfo)}\r\n                <Box className={styles.container}>\r\n                    <Paper className={styles.root}>\r\n                        <Grid className={styles.grid}>\r\n                            <Grid>\r\n                                <Typography>Thông tin cá nhân</Typography>\r\n                            </Grid>\r\n                            <Grid>\r\n                                <Typography>FullName</Typography>\r\n                                <TextField fullWidth\r\n                                    value={dataInfo.fullname}\r\n                                    onChange={e=>{setFullName(e.target.value)}}\r\n                                />\r\n                                <Typography>Email</Typography>\r\n                                <TextField fullWidth\r\n                                    value={dataInfo.email}\r\n                                    onChange={e=>{setEmail(e.target.value)}}\r\n                                />\r\n                                <Typography>User Name</Typography>\r\n                                <Typography>{dataInfo.username}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                    <Paper className={styles.root}>\r\n                        <Grid className={styles.grid}>\r\n                            <form className={styles.changePassword}>\r\n                                <Typography>\r\n                                    Change password\r\n                                </Typography>\r\n                                <TextField fullWidth\r\n                                    label='Current Password'\r\n                                    placeholder='Enter curent password'\r\n                                    type='password' />\r\n                                <TextField fullWidth\r\n                                    label='New Password'\r\n                                    placeholder='Enter new password'\r\n                                    type='password' />\r\n                                <TextField fullWidth\r\n                                    label='Confirm Password'\r\n                                    placeholder='Re-enter new password' \r\n                                    type='password'/>\r\n                                <Button>Change Password</Button>\r\n                            </form>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Box>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}